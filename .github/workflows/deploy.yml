name: üöÄ Build and deploy container app to Azure Function App 

on:
  workflow_dispatch:
env:
  ARM_SUBSCRIPTION_ID: ${{secrets.SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
  ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}

jobs:
 build-and-deploy:
    runs-on: 'ubuntu-latest'

    environment:
      name: 'development'
      url: ${{ steps.deploy-to-functions.outputs.app-url }}
      
    strategy:
      matrix:
        directory:
          - services/func-plus
          - services/func-minus
    steps:
    - name: üìÇ Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: üõ†Ô∏è Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: üîë Log in to registry
      uses: docker/login-action@v2
      with:
        registry:  ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: üîÑ downcase REPO
      uses: ASzc/change-string-case-action@v1
      id: downcase
      with:
          string: ${{ github.repository }}

    - name: ‚ôªÔ∏è Set correct environment
      run: |
        REPO=${{ steps.downcase.outputs.lowercase }}
        echo "REPO=$REPO" >> "$GITHUB_ENV"

    # - name: Navigate to the target directory
    #   run: cd services 

    - name: Check and copy necessary files
      run: |
        DIRECTORY=${{ matrix.directory }}
        REQUIRED_FILES=(".funcignore" ".gitignore" "host.json" "local.settings.json" "requirements.txt" "Dockerfile")
        FILES_PATH= $GITHUB_WORKSPACE/services  
        for file in "${REQUIRED_FILES[@]}"; do
          if [ ! -f "${FILES_PATH}/${DIRECTORY}/${file}" ]; then
            echo "${file} not found in ${FILES_PATH}/${DIRECTORY}, cannot copy"
          else
            echo "${file} found in ${FILES_PATH}/${DIRECTORY}, copying from there"
            cp "${FILES_PATH}/${DIRECTORY}/${file}" "${DIRECTORY}/"
          fi
        done

    - name: üèóÔ∏è Build and push container image to registry
      uses: docker/build-push-action@v3
      with:
        context: ./${{ matrix.directory }}
        push: true
        tags: ghcr.io/${{ env.REPO }}-${{ matrix.directory }}:latest
        file: ./Dockerfile

    # - name: üîë Login to Azure
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}
    #   if: env.DIRECTORY == matrix.directory

    - name : üîë az login
      id : az-login
      run : az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID

    - name: üöÄ Deploy to Azure Functions
      id: deploy-to-functions
      uses: Azure/functions-container-action@v1
      with:
        app-name: ${{ matrix.directory }}
        image: 'ghcr.io/${{ env.REPO }}-${{ matrix.directory }}:latest'
# 